# Шаблоны цифр из звёздочек (5 строк высотой)
digit_patterns = {
    '0': [
        '***',
        '* *',
        '* *',
        '* *',
        '***'
    ],
    '1': [
        ' * ',
        ' * ',
        ' * ',
        ' * ',
        ' * '
    ],
    '2': [
        '***',
        '  *',
        '***',
        '*  ',
        '***'
    ],
    '3': [
        '***',
        '  *',
        '***',
        '  *',
        '***'
    ],
    '4': [
        '* *',
        '* *',
        '***',
        '  *',
        '  *'
    ],
    '5': [
        '***',
        '*  ',
        '***',
        '  *',
        '***'
    ],
    '6': [
        '***',
        '*  ',
        '***',
        '* *',
        '***'
    ],
    '7': [
        '***',
        '  *',
        '  *',
        '  *',
        '  *'
    ],
    '8': [
        '***',
        '* *',
        '***',
        '* *',
        '***'
    ],
    '9': [
        '***',
        '* *',
        '***',
        '  *',
        '***'
    ],
    ' ': [
        ' ',
        ' ',
        ' ',
        ' ',
        ' '
    ]
}


def print_date_in_digital_format(date_str):
    # Разбиваем дату на отдельные символы (дд мм гггг)
    digits = list(date_str)

    # Для каждой из 5 строк в шаблоне цифры
    for i in range(5):
        line = []
        for d in digits:
            if d in digit_patterns:
                line.append(digit_patterns[d][i])
            else:
                line.append('   ')  # Для неизвестных символов (например, разделителей)

        # Соединяем все цифры в строку с пробелами между ними
        print(' '.join(line))


# Пример использования
birth_date = "23 04 1986"  # Формат "дд мм гггг"
print_date_in_digital_format(birth_date)